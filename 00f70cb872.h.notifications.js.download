'https://github.com/swmff/rainbeam';function asyncGeneratorStep(e,t,n,r,o,a,c){try{var i=e[a](c),u=i.value}catch(e){n(e);return}i.done?t(u):Promise.resolve(u).then(r,o)}function _async_to_generator(e){return function(){var t=this,n=arguments;return new Promise(function(r,o){var a=e.apply(t,n);function c(e){asyncGeneratorStep(a,r,o,c,i,"next",e)}function i(e){asyncGeneratorStep(a,r,o,c,i,"throw",e)}c(void 0)})}}function _ts_generator(e,t){var n,r,o,a,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(n)throw TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return c.label++,{value:a[1],done:!1};case 5:c.label++,r=a[1],a=[0];continue;case 7:a=c.ops.pop(),c.trys.pop();continue;default:if(!(o=(o=c.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){c=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){c.label=a[1];break}if(6===a[0]&&c.label<o[1]){c.label=o[1],o=a;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(a);break}o[2]&&c.ops.pop(),c.trys.pop();continue}a=t.call(e,c)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}}!function(){var e,t,n=reg_ns("notifications",["app"]);n.define("delete",(e=_async_to_generator(function(e,t,n){var r;return _ts_generator(this,function(n){return e.$,r=e.app,fetch("/api/v0/auth/notifications/".concat(t),{method:"DELETE"}).then(function(e){return e.json()}).then(function(e){document.getElementById("notif:".concat(t))&&(trigger("app::toast",[e.success?"success":"error",e.success?"Notification deleted!":e.message]),r.smooth_remove(document.getElementById("notif:".concat(t)),500))}),[2]})}),function(t,n,r){return e.apply(this,arguments)})),n.define("clear",(t=_async_to_generator(function(e,t){return _ts_generator(this,function(e){return fetch("/api/v0/auth/notifications/clear",{method:"DELETE"}).then(function(e){return e.json()}).then(function(e){trigger("app::toast",[e.success?"success":"error",e.success?"Notifications cleared!":e.message])}),[2]})}),function(e,n){return t.apply(this,arguments)})),n.define("onopen",function(e,t){var n=e.$;"true"===window.localStorage.getItem("clear_notifs")&&n.delete(t,!0)})}();